---
layout:     post
title:      "简单排序"
subtitle:   " \"算法很重要\""
date:       2019-05-31 16:00:00
author:     "Dong"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 算法
---

## 描叙
简单排序本次主要实现三种：简单选择排序，冒泡排序，插入排序

## 简单排序

简单选择排序是最简单直观的一种算法，基本思想为每一趟从待排序的数据元素中选择最小（或最大）的一个元素作为首元素，直到所有元素排完为止，简单选择排序是不稳定排序。

### 代码
```java
package algorithm;

import java.util.Arrays;

/**
 * Created by admin on 2019/5/30.
 */
public class selectSort {

    public static void main(String[] args) {
        int[] a = {8, 4, 5, 7, 1, 3, 6, 2};
        select(a);
        System.out.println(Arrays.toString(a));
    }

    private static void select(int[] a) {
        for (int i = 0; i < a.length; i++) {
            int min = i;
            for (int j = i + 1; j < a.length; j++) {
                if (a[j] < a[min]) {
                    min = j;
                }
            }
            if (min!=i){
                int tmp = a[min];
                a[min] = a[i];
                a[i] = tmp;
            }
        }
    }
}


```

### 算法分析
简单选择排序通过上面优化之后，无论数组原始排列如何，比较次数是不变的；对于交换操作，在最好情况下也就是数组完全有序的时候，无需任何交换移动，在最差情况下，也就是数组倒序的时候，交换次数为n-1次。综合下来，时间复杂度为O(n2)

## 冒泡排序
冒泡排序的基本思想是，对相邻的元素进行两两比较，顺序相反则进行交换，这样，每一趟会将最小或最大的元素“浮”到顶端，最终达到完全有序

### 代码

```java

package algorithm;

import java.util.Arrays;

/**
 * Created by admin on 2019/5/30.
 */
public class BubbleSort {

    public static void main(String[] args) {
        int[] a = {8, 4, 5, 7, 1, 3, 6, 2};
        bubble(a);
        System.out.println(Arrays.toString(a));
    }

    private static void bubble(int[] a) {
        for (int i = 0; i < a.length; i++) {
            boolean flag = true;
            for (int j = 0; j < a.length-i-1; j++) {
                if (a[j] > a[j+1]) {
                    int tmp = a[j+1];
                    a[j+1] = a[j];
                    a[j] = tmp;
                    flag = false;
                }
            }
            if (flag) {
                break;
            }
        }
    }
}

```

### 算法分析
根据上面这种冒泡实现，若原数组本身就是有序的（这是最好情况），仅需n-1次比较就可完成；若是倒序，比较次数为 n-1+n-2+...+1=n(n-1)/2，交换次数和比较次数等值。所以，其时间复杂度依然为O(n2）。综合来看，冒泡排序性能还还是稍差于上面那种选择排序的。

## 直接插入排序
直接插入排序基本思想是每一步将一个待排序的记录，插入到前面已经排好序的有序序列中去，直到插完所有元素为止。

## 代码
```java
package algorithm;

import java.util.Arrays;

/**
 * Created by admin on 2019/5/30.
 */
public class InsertSort {

    public static void main(String[] args) {
        int[] a = {8, 4, 5, 7, 1, 3, 6, 2};
        insert(a);
        System.out.println(Arrays.toString(a));
    }

    private static void insert(int[] a) {
        for (int i = 1; i < a.length; i++) {
            int j = i;
            while (j>0&& a[j]<a[j-1]) {
                int tmp = a[j];
                a[j] = a[j-1];
                a[j-1] = tmp;
                j--;
            }
        }
    }
}

```