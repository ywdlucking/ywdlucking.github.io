---
layout:     post
title:      "快速排序"
subtitle:   " \"算法很重要\""
date:       2019-05-30 15:00:00
author:     "Dong"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 算法
---

## 描叙
快速排序由C. A. R. Hoare在1960年提出。它的基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。

## 思路
1. 以第一个元素作为递归项将数组划分成大小两部分
2. 分别对划分部分重复第一过程



## 代码
```java
package algorithm;

import java.util.Arrays;

/**
 * Created by admin on 2019/5/30.
 */
public class FastSort {

    public static void main(String[] args) {
        int[] a = {4,6,1,3,2,8,7,9,0};
        fastSort(a,0, a.length-1);
        System.out.println(Arrays.toString(a));
    }

    private static void fastSort(int[] a, int left, int right) {
        if(left<right){
            //以左边第一个元素为基准，将小于基准的放到左边，大于基准的放到右边
            int flag = division(a, left, right);
            //以第一次基准值将数组切成两份，分别递归调用
            fastSort(a, left, flag);
            fastSort(a, flag+1, right);
        }
    }

    private static int division(int[] a, int left, int right) {
        int temp = a[left];
        int i = left;
        int j = right+1;
        while (true){
            while (i<right&&a[++i]<temp);
            while (j>left&&a[--j]>temp);
            if (i >=j){
                break;
            }
            int tmp = a[i];
            a[i] = a[j];
            a[j] = tmp;
        }
        a[left] = a[j];
        a[j] = temp;
        return j;
    }


}

```

## 算法分析
在最优的情况下，快速排序算法的时间复杂度为O(nlogn)
空间复杂度O(logn)